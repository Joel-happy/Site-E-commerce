
Object.defineProperty(exports, "__esModule", { value: true });

const {
  Decimal,
  objectEnumValues,
  makeStrictEnum,
  Public,
  getRuntime,
} = require('@prisma/client/runtime/index-browser.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 5.12.1
 * Query Engine version: efd2449663b3d73d637ea1fd226bafbcf45b3102
 */
Prisma.prismaVersion = {
  client: "5.12.1",
  engine: "efd2449663b3d73d637ea1fd226bafbcf45b3102"
}

Prisma.PrismaClientKnownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientKnownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)};
Prisma.PrismaClientUnknownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientUnknownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientRustPanicError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientRustPanicError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientInitializationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientInitializationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientValidationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientValidationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.NotFoundError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`NotFoundError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`sqltag is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.empty = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`empty is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.join = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`join is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.raw = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`raw is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.getExtensionContext is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.defineExtension = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.defineExtension is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}

/**
 * Enums
 */

exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.AdresseScalarFieldEnum = {
  IdAdresse: 'IdAdresse',
  AdresseDeFacturation: 'AdresseDeFacturation',
  AdresseDeLivraison: 'AdresseDeLivraison',
  NomDuDestinataire: 'NomDuDestinataire',
  Adresse: 'Adresse',
  Ville: 'Ville',
  NumeroDeTelephone: 'NumeroDeTelephone',
  CodePostal: 'CodePostal',
  Pays: 'Pays',
  IdClient: 'IdClient'
};

exports.Prisma.ChoisitScalarFieldEnum = {
  IdClient: 'IdClient',
  IdMoto: 'IdMoto'
};

exports.Prisma.ClientScalarFieldEnum = {
  IdClient: 'IdClient',
  Nom: 'Nom',
  Prenom: 'Prenom',
  AddresseMail: 'AddresseMail',
  MotDePasse: 'MotDePasse',
  DateDeNaissance: 'DateDeNaissance',
  NumeroDeTelephone: 'NumeroDeTelephone',
  Anciennete: 'Anciennete',
  role: 'role'
};

exports.Prisma.CommandeScalarFieldEnum = {
  IdCommandes: 'IdCommandes',
  DatedeCommande: 'DatedeCommande',
  StatusDeLaCommande: 'StatusDeLaCommande',
  IdAdresse: 'IdAdresse',
  IdClient: 'IdClient'
};

exports.Prisma.FactureScalarFieldEnum = {
  IdFactures: 'IdFactures',
  DatedeFacturation: 'DatedeFacturation',
  MontantTotal: 'MontantTotal',
  IdClient: 'IdClient'
};

exports.Prisma.InclutScalarFieldEnum = {
  IdMoto: 'IdMoto',
  IdCommandes: 'IdCommandes'
};

exports.Prisma.MethodedepaiementScalarFieldEnum = {
  IdPaiement: 'IdPaiement',
  TypePaiement: 'TypePaiement',
  InformationsDePaiement: 'InformationsDePaiement'
};

exports.Prisma.MotosScalarFieldEnum = {
  IdMoto: 'IdMoto',
  NomMoto: 'NomMoto',
  Constructeur: 'Constructeur',
  Modele: 'Modele',
  DescriptionDuProduit: 'DescriptionDuProduit',
  Prix: 'Prix',
  Stock: 'Stock'
};

exports.Prisma.MotosSurCommandeScalarFieldEnum = {
  commandeId: 'commandeId',
  motoId: 'motoId'
};

exports.Prisma.PanierScalarFieldEnum = {
  IdPanier: 'IdPanier',
  Quantite: 'Quantite',
  IdClient: 'IdClient'
};

exports.Prisma.UtiliseScalarFieldEnum = {
  IdPaiement: 'IdPaiement',
  IdClient: 'IdClient'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};


exports.Prisma.ModelName = {
  adresse: 'adresse',
  choisit: 'choisit',
  client: 'client',
  commande: 'commande',
  facture: 'facture',
  inclut: 'inclut',
  methodedepaiement: 'methodedepaiement',
  motos: 'motos',
  MotosSurCommande: 'MotosSurCommande',
  panier: 'panier',
  utilise: 'utilise'
};

/**
 * This is a stub Prisma Client that will error at runtime if called.
 */
class PrismaClient {
  constructor() {
    return new Proxy(this, {
      get(target, prop) {
        let message
        const runtime = getRuntime()
        if (runtime.isEdge) {
          message = `PrismaClient is not configured to run in ${runtime.prettyName}. In order to run Prisma Client on edge runtime, either:
- Use Prisma Accelerate: https://pris.ly/d/accelerate
- Use Driver Adapters: https://pris.ly/d/driver-adapters
`;
        } else {
          message = 'PrismaClient is unable to run in this browser environment, or has been bundled for the browser (running in `' + runtime.prettyName + '`).'
        }
        
        message += `
If this is unexpected, please open an issue: https://pris.ly/prisma-prisma-bug-report`

        throw new Error(message)
      }
    })
  }
}

exports.PrismaClient = PrismaClient

Object.assign(exports, Prisma)
